<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd"
	>

	<description>Quartz的定时任务配置</description>

	<!-- Quartz本地Schduler -->
	<bean id="localQuartzScheduler" class="org.springframework.scheduling.quartz.SchedulerFactoryBean" >
		<!-- Triggers集成 -->
		<property name="triggers">
			<list>
				<ref bean="cronTrigger" />
			</list>
		</property>
		<!-- Quartz配置 -->
		<property name="quartzProperties">
			<props>
				<prop key="org.quartz.threadPool.threadCount">5</prop>
			</props>
		</property>
		<!-- 启动时延期10秒开始任务 -->
		<property name="startupDelay" value="0" />
	</bean>
	


	<!-- Cron式Trigger定义 -->
	<bean id="cronTrigger" class="org.springframework.scheduling.quartz.CronTriggerBean">
		<property name="jobDetail" ref="cronJob" />
		<property name="cronExpression" value="0 0/1 0 * * ?" />
	</bean>
	
	<!-- Cron Job -->
	<bean id="cronJob" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
		<property name="targetObject" ref="nineteenQuartzJob" />
		<property name="targetMethod" value="cronExecuteLog" />
		<property name="concurrent"><value>false</value></property>
	</bean>
	
	<!-- 被执行的业务类 
	<bean id="nineteenQuartzJob" class="org.ertuo.douche.biz.nineteen.schedule.NineteenQuartzJob" />
	-->
	
	
	
	<!-- Quartz集群Schduler 
	<bean id="clusterQuartzScheduler" class="org.springframework.scheduling.quartz.SchedulerFactoryBean" lazy-init="false">
		 Triggers集成 
		<property name="triggers">
			<list>
				<ref bean="simpleTrigger" />
			</list>
		</property>
		 quartz配置文件路径 
		<property name="configLocation" value="classpath:schedule/quartz-cluster.properties" />
		 启动时延期10秒开始任务 
		<property name="startupDelay" value="10000" />
		 保存Job数据到数据库所需的带事务数据源 
		<property name="dataSource" ref="dataSource" />
	</bean>-->
	<!-- Timer式 Trigger定义
	<bean id="simpleTrigger" class="org.springframework.scheduling.quartz.SimpleTriggerBean">
		<property name="jobDetail" ref="timerJob" />
		<property name="repeatInterval" value="3600000" />
	</bean>-->

	

	<!-- Timer Job 
	<bean id="timerJob" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
		<property name="targetObject" ref="quartzJob" />
		<property name="targetMethod" value="timerExecuteLog" />
	</bean>-->

	
</beans>
